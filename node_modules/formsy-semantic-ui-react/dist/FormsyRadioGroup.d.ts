import { FormsyInjectedProps } from 'formsy-react';
import React from 'react';
import { RadioProps, StrictFormFieldProps, StrictRadioProps } from 'semantic-ui-react';
import { StrictFormGroupProps } from 'semantic-ui-react/dist/commonjs/collections/Form/FormGroup';
declare type RadioGroupValueType = RadioProps['value'];
export interface IFormsyRadioGroupProps extends FormsyInjectedProps<RadioGroupValueType>, Pick<StrictFormFieldProps, 'as' | 'className' | 'error' | 'width' | 'disabled'>, Omit<StrictRadioProps, 'error' | 'value' | 'name'>, Pick<StrictFormGroupProps, 'inline' | 'unstackable'> {
    id?: string;
    inputClassName?: string;
    passRequiredToField?: boolean;
    defaultSelected?: string;
    label?: string | React.ReactNode;
    errorLabel?: React.ReactElement;
    children: React.ReactNode[];
}
declare const _default: React.ComponentType<Pick<IFormsyRadioGroupProps & import("formsy-react/dist/withFormsy").WrapperProps<string | number>, "value" | "as" | "className" | "error" | "width" | "disabled" | "name" | "slider" | "toggle" | "type" | "checked" | "defaultChecked" | "defaultIndeterminate" | "fitted" | "id" | "indeterminate" | "label" | "onChange" | "onClick" | "onMouseDown" | "onMouseUp" | "radio" | "readOnly" | "tabIndex" | "inline" | "unstackable" | "children" | "required" | "defaultSelected" | "inputClassName" | "passRequiredToField" | "errorLabel" | "innerRef" | "validationError" | "validationErrors" | "validations">>;
export default _default;
