import { FormsyInjectedProps } from 'formsy-react';
import React from 'react';
import { Dropdown, Form, Select, StrictDropdownProps, StrictFormFieldProps } from 'semantic-ui-react';
declare type FormsyDropdownValue = StrictDropdownProps['value'];
export interface IFormsyDropdownProps extends FormsyInjectedProps<FormsyDropdownValue>, Pick<StrictFormFieldProps, 'as' | 'className' | 'error' | 'width' | 'inline' | 'disabled'>, Omit<StrictDropdownProps, 'error' | 'value'> {
    id?: string;
    inputClassName?: string;
    passRequiredToField?: boolean;
    inputAs?: typeof Dropdown | typeof Select | typeof Form.Dropdown | typeof Form.Select;
    label?: string | React.ReactNode;
    errorLabel?: React.ReactElement;
}
declare const _default: React.ComponentType<Pick<IFormsyDropdownProps & import("formsy-react/dist/withFormsy").WrapperProps<string | number | boolean | (string | number | boolean)[]>, "value" | "as" | "className" | "error" | "width" | "inline" | "disabled" | "additionLabel" | "additionPosition" | "allowAdditions" | "basic" | "button" | "children" | "clearable" | "closeOnBlur" | "closeOnEscape" | "closeOnChange" | "compact" | "deburr" | "defaultOpen" | "defaultSearchQuery" | "defaultSelectedLabel" | "defaultUpward" | "defaultValue" | "direction" | "floating" | "fluid" | "header" | "icon" | "item" | "labeled" | "lazyLoad" | "loading" | "minCharacters" | "multiple" | "noResultsMessage" | "onAddItem" | "onBlur" | "onChange" | "onClick" | "onClose" | "onFocus" | "onLabelClick" | "onMouseDown" | "onOpen" | "onSearchChange" | "open" | "openOnFocus" | "options" | "placeholder" | "pointing" | "renderLabel" | "scrolling" | "search" | "searchInput" | "searchQuery" | "selectOnBlur" | "selectOnNavigation" | "selectedLabel" | "selection" | "simple" | "tabIndex" | "text" | "trigger" | "upward" | "wrapSelection" | "id" | "label" | "required" | "inputClassName" | "passRequiredToField" | "inputAs" | "errorLabel" | "innerRef" | "name" | "validationError" | "validationErrors" | "validations">>;
export default _default;
